/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}


jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('reports')
}


dependencies {

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'

    // This dependency is used by the application.

}

application {
    // Define the main class for the application.
    mainClass = 'hexlet.code.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

compileJava {
    options.release = 17
}

run {
  standardInput = System.in
}

